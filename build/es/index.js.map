{"version":3,"sources":["../../src/index.ts"],"sourcesContent":["/*!\n * router\n * Copyright(c) 2015-2017 Fangdun Cai\n * MIT Licensed\n */\n\nimport { parseQuery, parseUrl } from './libs'\n\n// Static Param Any `*` `/` `:`\nconst [SKIND, PKIND, AKIND, STAR, SLASH, COLON] = [0, 1, 2, 42, 47, 58]\n\ntype Result<T = any> = [\n    handler: undefined | T,\n    params: [string, string][],\n    query: Record<string, string>\n]\n\nexport type HTTPMethod =\n    | 'ACL'\n    | 'BIND'\n    | 'CHECKOUT'\n    | 'CONNECT'\n    | 'COPY'\n    | 'DELETE'\n    | 'GET'\n    | 'HEAD'\n    | 'LINK'\n    | 'LOCK'\n    | 'M-SEARCH'\n    | 'MERGE'\n    | 'MKACTIVITY'\n    | 'MKCALENDAR'\n    | 'MKCOL'\n    | 'MOVE'\n    | 'NOTIFY'\n    | 'OPTIONS'\n    | 'PATCH'\n    | 'POST'\n    | 'PROPFIND'\n    | 'PROPPATCH'\n    | 'PURGE'\n    | 'PUT'\n    | 'REBIND'\n    | 'REPORT'\n    | 'SEARCH'\n    | 'SOURCE'\n    | 'SUBSCRIBE'\n    | 'TRACE'\n    | 'UNBIND'\n    | 'UNLINK'\n    | 'UNLOCK'\n    | 'UNSUBSCRIBE'\n\nclass TrekNode<T = any> {\n    label: number\n    prefix: string\n    children: any[]\n    kind: number\n    map: Record<\n        string,\n        {\n            handler: T\n            pnames: string\n        }\n    >\n\n    constructor(\n        prefix = '/',\n        children = [] as any[],\n        kind = SKIND,\n        map = Object.create(null)\n    ) {\n        this.label = prefix.charCodeAt(0)\n        this.prefix = prefix\n        this.children = children\n        this.kind = kind\n        this.map = map\n    }\n\n    addChild(n: any) {\n        this.children.push(n)\n    }\n\n    findChild(c: number, t: number, l?: number, e?: TrekNode, i = 0) {\n        for (l = this.children.length; i < l; i++) {\n            e = this.children[i]\n            if (c === e?.label && t === e.kind) {\n                return e\n            }\n        }\n    }\n\n    findChildWithLabel(c: number, l?: number, e?: TrekNode, i = 0) {\n        for (l = this.children.length; i < l; i++) {\n            e = this.children[i]\n            if (c === e?.label) {\n                return e\n            }\n        }\n    }\n\n    findChildByKind(t: number, l?: number, e?: TrekNode, i = 0) {\n        for (l = this.children.length; i < l; i++) {\n            e = this.children[i]\n            if (t === e?.kind) {\n                return e\n            }\n        }\n    }\n\n    addHandler(method: string, handler: T, pnames: string) {\n        this.map[method] = { handler, pnames }\n    }\n\n    findHandler(method: string) {\n        return this.map[method]\n    }\n}\n\nexport default class Router<T = any> {\n    _tree: TrekNode<T>\n    routes: any[]\n\n    constructor() {\n        this._tree = new TrekNode()\n        this.routes = []\n    }\n\n    add(method: string, path: string, handler: T) {\n        let [i, l, pnames] = [0, path.length, [] as string[]]\n        let ch: number, j: number\n\n        this.routes.push([method, path, handler])\n\n        for (; i < l; ++i) {\n            ch = path.charCodeAt(i)\n            if (ch === COLON) {\n                j = i + 1\n\n                this._insert(method, path.substring(0, i), SKIND)\n                while (i < l && path.charCodeAt(i) !== SLASH) i++\n\n                pnames.push(path.substring(j, i))\n                path = path.substring(0, j) + path.substring(i)\n                i = j\n                l = path.length\n\n                if (i === l)\n                    return void this._insert(\n                        method,\n                        path.substring(0, i),\n                        PKIND,\n                        pnames,\n                        handler\n                    )\n\n                this._insert(method, path.substring(0, i), PKIND, pnames)\n            } else if (ch === STAR) {\n                this._insert(method, path.substring(0, i), SKIND)\n                pnames.push('*')\n                this._insert(\n                    method,\n                    path.substring(0, l),\n                    AKIND,\n                    pnames,\n                    handler\n                )\n                return\n            }\n        }\n        this._insert(method, path, SKIND, pnames, handler)\n    }\n\n    _insert(\n        method: string,\n        path: string,\n        t: number,\n        pnames?: any,\n        handler?: any\n    ) {\n        // Copy current TrekNode as root\n        let [cn] = [this._tree]\n        let prefix, sl, pl, l, max, n, c\n\n        while (true) {\n            prefix = cn.prefix\n            sl = path.length\n            pl = prefix.length\n            l = 0\n\n            // LCP\n            max = sl < pl ? sl : pl\n            while (l < max && path.charCodeAt(l) === prefix.charCodeAt(l)) {\n                l++\n            }\n\n            /*\n      If (l === 0) {\n        // At root TrekNode\n        cn.label = search.charCodeAt(0)\n        cn.prefix = search\n        if (handler !== undefined) {\n          cn.addHandler(method, { pnames, handler })\n        }\n      } else if (l < pl) {\n      */\n            if (l < pl) {\n                // Split TrekNode\n                n = new TrekNode(\n                    prefix.substring(l),\n                    cn.children,\n                    cn.kind,\n                    cn.map\n                )\n                cn.children = [n] // Add to parent\n\n                // Reset parent TrekNode\n                cn.label = prefix.charCodeAt(0)\n                cn.prefix = prefix.substring(0, l)\n                cn.map = Object.create(null)\n                cn.kind = SKIND\n\n                if (l === sl) {\n                    // At parent TrekNode\n                    cn.addHandler(method, handler, pnames)\n                    cn.kind = t\n                } else {\n                    // Create child TrekNode\n                    n = new TrekNode(path.substring(l), [], t)\n                    n.addHandler(method, handler, pnames)\n                    cn.addChild(n)\n                }\n            } else if (l < sl) {\n                path = path.substring(l)\n                c = cn.findChildWithLabel(path.charCodeAt(0))\n                if (c !== undefined) {\n                    // Go deeper\n                    cn = c\n                    continue\n                }\n                // Create child TrekNode\n                n = new TrekNode(path, [], t)\n                n.addHandler(method, handler, pnames)\n                cn.addChild(n)\n            } else if (handler !== undefined) {\n                // TrekNode already exists\n                cn.addHandler(method, handler, pnames)\n            }\n            return\n        }\n    }\n\n    find(method: HTTPMethod, url: string): Result<T> {\n        const [path, stringifiedQuery] = parseUrl(url)\n\n        let result = this._find(method, path, undefined, 0, [\n            undefined,\n            []\n        ] as any)\n\n        // @ts-ignore\n        result[2] = stringifiedQuery ? parseQuery(stringifiedQuery) : {}\n\n        return result\n    }\n\n    _find(\n        method: HTTPMethod,\n        path: string,\n        cn: TrekNode | undefined,\n        n: number,\n        result: Result<T>\n    ) {\n        cn = cn || this._tree // Current TrekNode as root\n        const sl = path.length\n        const prefix = cn.prefix\n        const pvalues = result[1] as any[] // Params\n        let i, pl, l, max, c\n        let preSearch // Pre search\n\n        // Search order static > param > match-any\n        if (sl === 0 || path === prefix) {\n            // Found\n            const r = cn.findHandler(method)\n            if ((result[0] = r && r.handler) !== undefined) {\n                const pnames = r.pnames\n                if (pnames !== undefined) {\n                    for (i = 0, l = pnames.length; i < l; ++i) {\n                        pvalues[i] = [pnames[i], pvalues[i]]\n                    }\n                }\n            }\n            return result\n        }\n\n        pl = prefix.length\n        l = 0\n\n        // LCP\n        max = sl < pl ? sl : pl\n        while (l < max && path.charCodeAt(l) === prefix.charCodeAt(l)) l++\n\n        if (l === pl) path = path.substring(l)\n\n        preSearch = path\n\n        // Static TrekNode\n        c = cn.findChild(path.charCodeAt(0), SKIND)\n        if (c !== undefined) {\n            this._find(method, path, c, n, result)\n            if (result[0] !== undefined) {\n                return result\n            }\n            path = preSearch\n        }\n\n        // Not found TrekNode\n        if (l !== pl) {\n            return result\n        }\n\n        // Param TrekNode\n        c = cn.findChildByKind(PKIND)\n        if (c !== undefined) {\n            l = path.length\n            i = 0\n            while (i < l && path.charCodeAt(i) !== SLASH) {\n                i++\n            }\n\n            pvalues[n] = path.substring(0, i)\n\n            n++\n            preSearch = path\n            path = path.substring(i)\n\n            this._find(method, path, c, n, result)\n            if (result[0] !== undefined) return result\n\n            n--\n            pvalues.pop()\n            path = preSearch\n        }\n\n        // Any TrekNode\n        c = cn.findChildByKind(AKIND)\n        if (c !== undefined) {\n            pvalues[n] = path\n            path = '' // End search\n            this._find(method, path, c, n, result)\n        }\n\n        return result\n    }\n}\n"],"names":["parseQuery","parseUrl","SKIND","PKIND","AKIND","STAR","SLASH","COLON","TrekNode","constructor","prefix","children","kind","map","Object","create","label","charCodeAt","addChild","n","push","findChild","c","t","l","e","i","length","findChildWithLabel","findChildByKind","addHandler","method","handler","pnames","findHandler","Router","_tree","routes","add","path","ch","j","_insert","substring","cn","sl","pl","max","undefined","find","url","stringifiedQuery","result","_find","pvalues","preSearch","r","pop"],"mappings":"AAMA,SAASA,UAAU,IAAVA,CAAU,EAAEC,QAAQ,IAARA,CAAQ,QAAQ,QAAQ,CAAA;AAG7C,IAAM,CAACC,CAAK,EAAEC,CAAK,EAAEC,CAAK,EAAEC,CAAI,EAAEC,CAAK,EAAEC,CAAK,CAAC,GAAG;AAAC,KAAC;AAAE,KAAC;AAAE,KAAC;AAAE,MAAE;AAAE,MAAE;AAAE,MAAE;CAAC;AA4CvE,MAAMC,CAAQ;IAaVC,YACIC,CAAM,GAAG,GAAG,EACZC,CAAQ,GAAG,EAAE,AAAS,EACtBC,CAAI,GAAGV,CAAK,EACZW,CAAG,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC,CAC3B;QACE,IAAI,CAACC,KAAK,GAAGN,CAAM,CAACO,UAAU,CAAC,CAAC,CAAC,EACjC,IAAI,CAACP,MAAM,GAAGA,CAAM,EACpB,IAAI,CAACC,QAAQ,GAAGA,CAAQ,EACxB,IAAI,CAACC,IAAI,GAAGA,CAAI,EAChB,IAAI,CAACC,GAAG,GAAGA,CAAG;KACjB;IAEDK,QAAQ,CAACC,CAAM,EAAE;QACb,IAAI,CAACR,QAAQ,CAACS,IAAI,CAACD,CAAC,CAAC;KACxB;IAEDE,SAAS,CAACC,CAAS,EAAEC,CAAS,EAAEC,CAAU,EAAEC,CAAY,EAAEC,CAAC,GAAG,CAAC,EAAE;QAC7D,IAAKF,CAAC,GAAG,IAAI,CAACb,QAAQ,CAACgB,MAAM,EAAED,CAAC,GAAGF,CAAC,EAAEE,CAAC,EAAE,CAErC,IAAIJ,CAAC,KAAKG,CAAAA,QADVA,CAAAA,CAAC,GAAG,IAAI,CAACd,QAAQ,CAACe,CAAC,CAAC,CAAA,AACF,GAARD,KAAAA,CAAQ,GAARA,CAAC,CAAET,KAAK,CAAA,IAAIO,CAAC,KAAKE,CAAC,CAACb,IAAI,EAC9B,OAAOa,CAAC,CAAA;KAGnB;IAEDG,kBAAkB,CAACN,CAAS,EAAEE,CAAU,EAAEC,CAAY,EAAEC,CAAC,GAAG,CAAC,EAAE;QAC3D,IAAKF,CAAC,GAAG,IAAI,CAACb,QAAQ,CAACgB,MAAM,EAAED,CAAC,GAAGF,CAAC,EAAEE,CAAC,EAAE,CAErC,IAAIJ,CAAC,KAAKG,CAAAA,QADVA,CAAAA,CAAC,GAAG,IAAI,CAACd,QAAQ,CAACe,CAAC,CAAC,CAAA,AACF,GAARD,KAAAA,CAAQ,GAARA,CAAC,CAAET,KAAK,CAAA,EACd,OAAOS,CAAC,CAAA;KAGnB;IAEDI,eAAe,CAACN,CAAS,EAAEC,CAAU,EAAEC,CAAY,EAAEC,CAAC,GAAG,CAAC,EAAE;QACxD,IAAKF,CAAC,GAAG,IAAI,CAACb,QAAQ,CAACgB,MAAM,EAAED,CAAC,GAAGF,CAAC,EAAEE,CAAC,EAAE,CAErC,IAAIH,CAAC,KAAKE,CAAAA,QADVA,CAAAA,CAAC,GAAG,IAAI,CAACd,QAAQ,CAACe,CAAC,CAAC,CAAA,AACH,GAAPD,KAAAA,CAAO,GAAPA,CAAC,CAAEb,IAAI,CAAA,EACb,OAAOa,CAAC,CAAA;KAGnB;IAEDK,UAAU,CAACC,CAAc,EAAEC,CAAU,EAAEC,CAAc,EAAE;QACnD,IAAI,CAACpB,GAAG,CAACkB,CAAM,CAAC,GAAG;YAAEC,OAAO,EAAPA,CAAO;YAAEC,MAAM,EAANA,CAAM;SAAE;KACzC;IAEDC,WAAW,CAACH,CAAc,EAAE;QACxB,OAAO,IAAI,CAAClB,GAAG,CAACkB,CAAM,CAAC,CAAA;KAC1B;CACJ;AAED,eAAe,MAAMI,CAAM;IAIvB1B,aAAc;QACV,IAAI,CAAC2B,KAAK,GAAG,IAAI5B,CAAQ,EAAE,EAC3B,IAAI,CAAC6B,MAAM,GAAG,EAAE;KACnB;IAEDC,GAAG,CAACP,CAAc,EAAEQ,CAAY,EAAEP,CAAU,EAAE;QAC1C,IAAI,CAACN,CAAC,EAAEF,CAAC,EAAES,CAAM,CAAC,GAAG;AAAC,aAAC;YAAEM,CAAI,CAACZ,MAAM;YAAE,EAAE;SAAa,EACjDa,CAAE,AAAQ,EAAEC,CAAC,AAAQ,AAD4B;QAKrD,IAFA,IAAI,CAACJ,MAAM,CAACjB,IAAI,CAAC;YAACW,CAAM;YAAEQ,CAAI;YAAEP,CAAO;SAAC,CAAC,EAElCN,CAAC,GAAGF,CAAC,EAAE,EAAEE,CAAC,CAEb,IAAIc,AADJA,CAAAA,CAAE,GAAGD,CAAI,CAACtB,UAAU,CAACS,CAAC,CAAC,CAAA,KACZnB,CAAK,EAAE;YAId,IAHAkC,CAAC,GAAGf,CAAC,GAAG,CAAC,EAET,IAAI,CAACgB,OAAO,CAACX,CAAM,EAAEQ,CAAI,CAACI,SAAS,CAAC,CAAC,EAAEjB,CAAC,CAAC,EAAExB,CAAK,CAAC,EAC1CwB,CAAC,GAAGF,CAAC,IAAIe,CAAI,CAACtB,UAAU,CAACS,CAAC,CAAC,KAAKpB,CAAK,EAAEoB,CAAC,EAAE;YAOjD,IALAO,CAAM,CAACb,IAAI,CAACmB,CAAI,CAACI,SAAS,CAACF,CAAC,EAAEf,CAAC,CAAC,CAAC,EACjCa,CAAI,GAAGA,CAAI,CAACI,SAAS,CAAC,CAAC,EAAEF,CAAC,CAAC,GAAGF,CAAI,CAACI,SAAS,CAACjB,CAAC,CAAC,EAC/CA,CAAC,GAAGe,CAAC,EACLjB,CAAC,GAAGe,CAAI,CAACZ,MAAM,EAEXD,CAAC,KAAKF,CAAC,EACP,OAAO,KAAK,IAAI,CAACkB,OAAO,CACpBX,CAAM,EACNQ,CAAI,CAACI,SAAS,CAAC,CAAC,EAAEjB,CAAC,CAAC,EACpBvB,CAAK,EACL8B,CAAM,EACND,CAAO,CACV,CAAA;YAEL,IAAI,CAACU,OAAO,CAACX,CAAM,EAAEQ,CAAI,CAACI,SAAS,CAAC,CAAC,EAAEjB,CAAC,CAAC,EAAEvB,CAAK,EAAE8B,CAAM,CAAC,CAAA;SAC5D,MAAM,IAAIO,CAAE,KAAKnC,CAAI,EAAE;YACpB,IAAI,CAACqC,OAAO,CAACX,CAAM,EAAEQ,CAAI,CAACI,SAAS,CAAC,CAAC,EAAEjB,CAAC,CAAC,EAAExB,CAAK,CAAC,EACjD+B,CAAM,CAACb,IAAI,CAAC,GAAG,CAAC,EAChB,IAAI,CAACsB,OAAO,CACRX,CAAM,EACNQ,CAAI,CAACI,SAAS,CAAC,CAAC,EAAEnB,CAAC,CAAC,EACpBpB,CAAK,EACL6B,CAAM,EACND,CAAO,CACV;YACD,OAAM;SACT;QAEL,IAAI,CAACU,OAAO,CAACX,CAAM,EAAEQ,CAAI,EAAErC,CAAK,EAAE+B,CAAM,EAAED,CAAO,CAAC,CAAA;KACrD;IAEDU,OAAO,CACHX,CAAc,EACdQ,CAAY,EACZhB,CAAS,EACTU,CAAY,EACZD,CAAa,EACf;QAEE,IAAI,CAACY,CAAE,CAAC,GAAG;YAAC,IAAI,CAACR,KAAK;SAAC,EACnB1B,CAAM,EAAEmC,CAAE,EAAEC,CAAE,EAAEtB,CAAC,EAAEuB,CAAG,EAAE5B,CAAC,EAAEG,CAAC,AADT;QAGvB,OAAa;YAQT,IAPAZ,CAAM,GAAGkC,CAAE,CAAClC,MAAM,EAClBmC,CAAE,GAAGN,CAAI,CAACZ,MAAM,EAChBmB,CAAE,GAAGpC,CAAM,CAACiB,MAAM,EAClBH,CAAC,GAAG,CAAC,EAGLuB,CAAG,GAAGF,CAAE,GAAGC,CAAE,GAAGD,CAAE,GAAGC,CAAE,EAChBtB,CAAC,GAAGuB,CAAG,IAAIR,CAAI,CAACtB,UAAU,CAACO,CAAC,CAAC,KAAKd,CAAM,CAACO,UAAU,CAACO,CAAC,CAAC,EACzDA,CAAC,EAAE;YAaP,IAAIA,CAAC,GAAGsB,CAAE,EAEN3B,CAAC,GAAG,IAAIX,CAAQ,CACZE,CAAM,CAACiC,SAAS,CAACnB,CAAC,CAAC,EACnBoB,CAAE,CAACjC,QAAQ,EACXiC,CAAE,CAAChC,IAAI,EACPgC,CAAE,CAAC/B,GAAG,CACT,EACD+B,CAAE,CAACjC,QAAQ,GAAG;gBAACQ,CAAC;aAAC,EAGjByB,CAAE,CAAC5B,KAAK,GAAGN,CAAM,CAACO,UAAU,CAAC,CAAC,CAAC,EAC/B2B,CAAE,CAAClC,MAAM,GAAGA,CAAM,CAACiC,SAAS,CAAC,CAAC,EAAEnB,CAAC,CAAC,EAClCoB,CAAE,CAAC/B,GAAG,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC,EAC5B6B,CAAE,CAAChC,IAAI,GAAGV,CAAK,EAEXsB,CAAC,KAAKqB,CAAE,IAERD,CAAE,CAACd,UAAU,CAACC,CAAM,EAAEC,CAAO,EAAEC,CAAM,CAAC,EACtCW,CAAE,CAAChC,IAAI,GAAGW,CAAC,KAIXJ,AADAA,CAAAA,CAAC,GAAG,IAAIX,CAAQ,CAAC+B,CAAI,CAACI,SAAS,CAACnB,CAAC,CAAC,EAAE,EAAE,EAAED,CAAC,CAAC,CAAA,CACxCO,UAAU,CAACC,CAAM,EAAEC,CAAO,EAAEC,CAAM,CAAC,EACrCW,CAAE,CAAC1B,QAAQ,CAACC,CAAC,CAAC;iBAEf,IAAIK,CAAC,GAAGqB,CAAE,EAAE;gBAGf,IAFAN,CAAI,GAAGA,CAAI,CAACI,SAAS,CAACnB,CAAC,CAAC,EAEpBF,AAAM0B,KAAAA,CAAS,KADnB1B,CAAAA,CAAC,GAAGsB,CAAE,CAAChB,kBAAkB,CAACW,CAAI,CAACtB,UAAU,CAAC,CAAC,CAAC,CAAC,CAAA,AAC1B,EAAE;oBAEjB2B,CAAE,GAAGtB,CAAC;oBACN,SAAQ;iBACX;gBAEDH,CAAAA,CAAC,GAAG,IAAIX,CAAQ,CAAC+B,CAAI,EAAE,EAAE,EAAEhB,CAAC,CAAC,CAAA,CAC3BO,UAAU,CAACC,CAAM,EAAEC,CAAO,EAAEC,CAAM,CAAC,EACrCW,CAAE,CAAC1B,QAAQ,CAACC,CAAC,CAAC;aACjB,MAAsB6B,KAAAA,CAAS,KAArBhB,CAAO,IAEdY,CAAE,CAACd,UAAU,CAACC,CAAM,EAAEC,CAAO,EAAEC,CAAM,CAAC,CACzC;YACD,OAAM;SACT;KACJ;IAEDgB,IAAI,CAAClB,CAAkB,EAAEmB,CAAW,EAAa;QAC7C,IAAM,CAACX,CAAI,EAAEY,CAAgB,CAAC,GAAGlD,CAAQ,CAACiD,CAAG,CAAC,EAE1CE,CAAM,GAAG,IAAI,CAACC,KAAK,CAACtB,CAAM,EAAEQ,CAAI,EAAES,KAAAA,CAAS,EAAE,CAAC,EAAE;YAChDA,KAAAA,CAAS;YACT,EAAE;SACL,CAAQ,AALqC;QAU9C,OAFAI,CAAM,CAAC,CAAC,CAAC,GAAGD,CAAgB,GAAGnD,CAAU,CAACmD,CAAgB,CAAC,GAAG,EAAE,EAEzDC,CAAM,CAAA;KAChB;IAEDC,KAAK,CACDtB,CAAkB,EAClBQ,CAAY,EACZK,CAAwB,EACxBzB,CAAS,EACTiC,CAAiB,EACnB;QACER,CAAE,GAAGA,CAAE,IAAI,IAAI,CAACR,KAAK,CAAA;QACrB,IAAMS,CAAE,GAAGN,CAAI,CAACZ,MAAM,EAChBjB,CAAM,GAAGkC,CAAE,CAAClC,MAAM,EAClB4C,CAAO,GAAGF,CAAM,CAAC,CAAC,CAAC,AAAS,EAC9B1B,CAAC,EAAEoB,CAAE,EAAEtB,CAAC,EAAEuB,CAAG,EAAEzB,CAAC,EAChBiC,CAAS,AAJS;QAOtB,IAAIV,AAAO,CAAC,KAARA,CAAE,IAAUN,CAAI,KAAK7B,CAAM,EAAE;YAE7B,IAAM8C,CAAC,GAAGZ,CAAE,CAACV,WAAW,CAACH,CAAM,CAAC;YAChC,IAAI,AAAiCiB,KAAAA,CAAS,KAAzCI,CAAAA,CAAM,CAAC,CAAC,CAAC,GAAGI,CAAC,IAAIA,CAAC,CAACxB,OAAO,CAAA,AAAe,EAAE;gBAC5C,IAAMC,CAAM,GAAGuB,CAAC,CAACvB,MAAM;gBACvB,IAAIA,AAAWe,KAAAA,CAAS,KAApBf,CAAM,AAAc,EACpB,IAAKP,CAAC,GAAG,CAAC,EAAEF,CAAC,GAAGS,CAAM,CAACN,MAAM,EAAED,CAAC,GAAGF,CAAC,EAAE,EAAEE,CAAC,CACrC4B,CAAO,CAAC5B,CAAC,CAAC,GAAG;oBAACO,CAAM,CAACP,CAAC,CAAC;oBAAE4B,CAAO,CAAC5B,CAAC,CAAC;iBAAC;aAG/C;YACD,OAAO0B,CAAM,CAAA;SAChB;QAOD,IALAN,CAAE,GAAGpC,CAAM,CAACiB,MAAM,EAClBH,CAAC,GAAG,CAAC,EAGLuB,CAAG,GAAGF,CAAE,GAAGC,CAAE,GAAGD,CAAE,GAAGC,CAAE,EAChBtB,CAAC,GAAGuB,CAAG,IAAIR,CAAI,CAACtB,UAAU,CAACO,CAAC,CAAC,KAAKd,CAAM,CAACO,UAAU,CAACO,CAAC,CAAC,EAAEA,CAAC,EAAE;QAQlE,IANIA,CAAC,KAAKsB,CAAE,IAAEP,CAAAA,CAAI,GAAGA,CAAI,CAACI,SAAS,CAACnB,CAAC,CAAC,CAAA,EAEtC+B,CAAS,GAAGhB,CAAI,EAIZjB,AAAM0B,KAAAA,CAAS,KADnB1B,CAAAA,CAAC,GAAGsB,CAAE,CAACvB,SAAS,CAACkB,CAAI,CAACtB,UAAU,CAAC,CAAC,CAAC,EAAEf,CAAK,CAAC,CAAA,AACxB,EAAE;YAEjB,IADA,IAAI,CAACmD,KAAK,CAACtB,CAAM,EAAEQ,CAAI,EAAEjB,CAAC,EAAEH,CAAC,EAAEiC,CAAM,CAAC,EAClCA,AAAcJ,KAAAA,CAAS,KAAvBI,CAAM,CAAC,CAAC,CAAC,AAAc,EACvB,OAAOA,CAAM,CAAA;YAEjBb,CAAI,GAAGgB,CAAS,CAAA;SACnB;QAGD,IAAI/B,CAAC,KAAKsB,CAAE,EACR,OAAOM,CAAM,CAAA;QAKjB,IAAI9B,AAAM0B,KAAAA,CAAS,KADnB1B,CAAAA,CAAC,GAAGsB,CAAE,CAACf,eAAe,CAAC1B,CAAK,CAAC,CAAA,AACV,EAAE;YAGjB,IAFAqB,CAAC,GAAGe,CAAI,CAACZ,MAAM,EACfD,CAAC,GAAG,CAAC,EACEA,CAAC,GAAGF,CAAC,IAAIe,CAAI,CAACtB,UAAU,CAACS,CAAC,CAAC,KAAKpB,CAAK,EACxCoB,CAAC,EAAE;YAUP,IAPA4B,CAAO,CAACnC,CAAC,CAAC,GAAGoB,CAAI,CAACI,SAAS,CAAC,CAAC,EAAEjB,CAAC,CAAC,EAEjCP,CAAC,EAAE,EACHoC,CAAS,GAAGhB,CAAI,EAChBA,CAAI,GAAGA,CAAI,CAACI,SAAS,CAACjB,CAAC,CAAC,EAExB,IAAI,CAAC2B,KAAK,CAACtB,CAAM,EAAEQ,CAAI,EAAEjB,CAAC,EAAEH,CAAC,EAAEiC,CAAM,CAAC,EAClCA,AAAcJ,KAAAA,CAAS,KAAvBI,CAAM,CAAC,CAAC,CAAC,AAAc,EAAE,OAAOA,CAAM,CAAA;YAE1CjC,CAAC,EAAE,EACHmC,CAAO,CAACG,GAAG,EAAE,EACblB,CAAI,GAAGgB,CAAS;SACnB;QAUD,OANUP,KAAAA,CAAS,KADnB1B,CAAAA,CAAC,GAAGsB,CAAE,CAACf,eAAe,CAACzB,CAAK,CAAC,CAAA,KAEzBkD,CAAO,CAACnC,CAAC,CAAC,GAAGoB,CAAI,EACjBA,CAAI,GAAG,EAAE,EACT,IAAI,CAACc,KAAK,CAACtB,CAAM,EAAEQ,CAAI,EAAEjB,CAAC,EAAEH,CAAC,EAAEiC,CAAM,CAAC,GAGnCA,CAAM,CAAA;KAChB;CACJ,CAAA"}